{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","showGoods","length","slice","join","addGoods","el","includes","setState","prevState","removeGoods","filter","i","clearGoods","this","className","map","classNames","selected","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,I,EAGjBC,UAAY,WACV,IAAQD,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcE,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUF,EAAV,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAc,GAAxB,gBAAkCA,EAAc,GAAhD,iBACF,QACE,MAAM,GAAN,OAAUA,EAAcG,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDJ,EAAcA,EAAcE,OAAS,GAA5F,mB,EAING,SAAW,SAACC,GAAD,OAAgB,WACpB,EAAKP,MAAMC,cAAcO,SAASD,IACrC,EAAKE,UAAS,SAACC,GAAD,MAAgB,CAC5BT,cAAc,GAAD,mBAAMS,EAAUT,eAAhB,CAA+BM,U,EAKlDI,YAAc,SAACJ,GAAD,OAAgB,WAC5B,EAAKE,UAAS,SAACC,GAAD,MAAgB,CAC5BT,cAAeS,EAAUT,cAAcW,QAAO,SAAAC,GAAC,OAAIA,IAAMN,W,EAI7DO,WAAa,WACX,EAAKL,SAAS,CAAER,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBc,KAAKf,MAAvBC,cAER,OACE,qBAAKe,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BD,KAAKb,cACjC,oBAAIc,UAAU,YAAd,SAEIlB,EAAgBmB,KAAI,SAAAV,GAAE,OACpB,oBAEES,UACEE,IAAW,CAAEC,SAAUlB,EAAcO,SAASD,KAHlD,SAME,sBAAKS,UAAU,YAAf,UACIT,EACF,qBAAKS,UAAU,uBAAf,SAEIf,EAAcO,SAASD,GAEnB,wBACEa,KAAK,SACLJ,UAAU,WACVK,QAAS,EAAKV,YAAYJ,GAH5B,oBASA,wBACEa,KAAK,SACLJ,UAAU,WACVK,QAAS,EAAKf,SAASC,GAHzB,0BApBLA,QAmCXN,EAAcE,OAEZ,wBACEiB,KAAK,SACLC,QAASN,KAAKD,WACdE,UAAU,qBAHZ,mBAQA,c,GA9FIM,IAAMC,WAqGTxB,ICvHfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.50c2a660.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component <{}, State> {\n  state = {\n    selectedGoods: [] as string[],\n  };\n\n  showGoods = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods} is selected`;\n      case 2:\n        return `${selectedGoods[0]} and ${selectedGoods[1]} are selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedGoods.length - 1]} are selected`;\n    }\n  };\n\n  addGoods = (el: string) => () => {\n    if (!this.state.selectedGoods.includes(el)) {\n      this.setState((prevState) => ({\n        selectedGoods: [...prevState.selectedGoods, el],\n      }));\n    }\n  };\n\n  removeGoods = (el: string) => () => {\n    this.setState((prevState) => ({\n      selectedGoods: prevState.selectedGoods.filter(i => i !== el),\n    }));\n  };\n\n  clearGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <h1 className=\"App__title\">{this.showGoods()}</h1>\n          <ul className=\"App__list\">\n            {\n              goodsFromServer.map(el => (\n                <li\n                  key={el}\n                  className={\n                    classNames({ selected: selectedGoods.includes(el) })\n                  }\n                >\n                  <div className=\"App__item\">\n                    { el }\n                    <div className=\"App__button--wrapper\">\n                      {\n                        selectedGoods.includes(el)\n                          ? (\n                            <button\n                              type=\"button\"\n                              className=\"App__btn\"\n                              onClick={this.removeGoods(el)}\n                            >\n                              Remove\n                            </button>\n                          )\n                          : (\n                            <button\n                              type=\"button\"\n                              className=\"App__btn\"\n                              onClick={this.addGoods(el)}\n                            >\n                              Select\n                            </button>\n                          )\n                      }\n                    </div>\n                  </div>\n                </li>\n              ))\n            }\n          </ul>\n          { selectedGoods.length\n            ? (\n              <button\n                type=\"button\"\n                onClick={this.clearGoods}\n                className=\"App__clear--button\"\n              >\n                Clear\n              </button>\n            )\n            : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}