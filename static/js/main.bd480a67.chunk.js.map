{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","showGoods","length","slice","join","addGoods","el","setState","prevState","removeGoods","filter","i","clearGoods","this","className","type","onClick","map","classNames","selected","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,I,EAGjBC,UAAY,WACV,IAAQD,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcE,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUF,EAAV,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAc,GAAxB,gBAAkCA,EAAc,GAAhD,iBACF,QACE,MAAM,GAAN,OAAUA,EAAcG,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDJ,EAAcA,EAAcE,OAAS,GAA5F,mB,EAING,SAAW,SAACC,GAAD,OAAgB,WACzB,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BR,cAAc,GAAD,mBAAMQ,EAAUR,eAAhB,CAA+BM,U,EAIhDG,YAAc,SAACH,GAAD,OAAgB,WAC5B,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BR,cAAeQ,EAAUR,cAAcU,QAAO,SAAAC,GAAC,OAAIA,IAAML,W,EAI7DM,WAAa,WACX,EAAKL,SAAS,CAAEP,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBa,KAAKd,MAAvBC,cAER,OACE,sBAAKc,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BD,KAAKZ,cAChCD,EAAcE,OAEX,wBACEa,KAAK,SACLC,QAASH,KAAKD,WACdE,UAAU,qBAHZ,mBAQA,KACJ,6BAEIjB,EAAgBoB,KAAI,SAAAX,GAAE,OACpB,qBAEEQ,UACEI,IAAW,CAAEC,SAAUnB,EAAcoB,SAASd,KAHlD,UAMIA,EACF,sBAAKQ,UAAU,uBAAf,UACE,wBAAQC,KAAK,SAASC,QAAS,EAAKX,SAASC,GAA7C,oBAGA,wBAAQS,KAAK,SAASC,QAAS,EAAKP,YAAYH,GAAhD,yBAVGA,e,GAzDHe,IAAMC,WAgFTxB,IClGfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bd480a67.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component <{}, State> {\n  state = {\n    selectedGoods: [] as string[],\n  };\n\n  showGoods = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods} is selected`;\n      case 2:\n        return `${selectedGoods[0]} and ${selectedGoods[1]} are selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedGoods.length - 1]} are selected`;\n    }\n  };\n\n  addGoods = (el: string) => () => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods, el],\n    }));\n  };\n\n  removeGoods = (el: string) => () => {\n    this.setState((prevState) => ({\n      selectedGoods: prevState.selectedGoods.filter(i => i !== el),\n    }));\n  };\n\n  clearGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">{this.showGoods()}</h1>\n        {selectedGoods.length\n          ? (\n            <button\n              type=\"button\"\n              onClick={this.clearGoods}\n              className=\"App__clear--button\"\n            >\n              Clear\n            </button>\n          )\n          : null}\n        <ul>\n          {\n            goodsFromServer.map(el => (\n              <li\n                key={el}\n                className={\n                  classNames({ selected: selectedGoods.includes(el) })\n                }\n              >\n                { el }\n                <div className=\"App__button--wrapper\">\n                  <button type=\"button\" onClick={this.addGoods(el)}>\n                    Select\n                  </button>\n                  <button type=\"button\" onClick={this.removeGoods(el)}>\n                    Remove\n                  </button>\n                </div>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}